# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v2.3.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: '11'
          # Java distribution. See the list of supported distributions in README file
          distribution: 'adopt'
      - name: Run TestProject agent
        env:
          TP_API_KEY: ${{ secrets.TESTPROJECT_API_KEY }}
        run: |
          echo $PATH
          envsubst < .github/ci/docker-compose.yml > docker-compose.yml
          docker-compose -f docker-compose.yml up -d
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.8.2
      - name: Install TestProject SDK
        run: mvn install:install-file -Dfile=external-dep/TestProject_SDK_0.65.0.jar -DgroupId=io.testproject -DartifactId=java-sdk -Dversion=0.65.0 -Dpackaging=jar
      - name: Sleep until the TestProject agent can run tests
        uses: mydea/action-wait-for-api@v1
        with:
          url: http://localhost:8585/api/status
          expected-response-field: registered
          expected-response-field-value: true
          interval: 1
          timeout: 60
      - name: Get pwd contents and path
        run: |
          pwd
          ls -a
      - name: Where is mvn
        run: |
          echo $PATH
          which mvn
      - name: Run tests with Maven
        env:
          #WAPPSTO_ADMIN_USERNAME: ${{ secrets.WAPPSTO_ADMIN_USERNAME }}
          #WAPPSTO_ADMIN_PASSWORD:  ${{ secrets.WAPPSTO_ADMIN_PASSWORD }}
          #TESTPROJECT_DEV_TOKEN: ${{ secrets.TESTPROJECT_DEV_TOKEN }}
          #WAPPSTO_API_ROOT: "https://qa.wappsto.com/services/2.0"
          #WAPPSTO_APP_URL: "https://qa.wappsto.com/"
          #WAPPSTO_TEST_NETWORK: ${{ secrets.WAPPSTO_TEST_NETWORK }}
          #WAPPSTO_DEVELOPER_USERNAME: ${{ secrets.WAPPSTO_DEVELOPER_USERNAME }}
          #WAPPSTO_DEVELOPER_PASSWORD: ${{ secrets.WAPPSTO_DEVELOPER_PASSWORD }}
        run: |
          echo $PATH
        working-directory: opensdk/code-reuse